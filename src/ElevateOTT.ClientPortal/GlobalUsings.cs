global using ElevateOTT.ClientPortal.Consumers;
global using ElevateOTT.ClientPortal.Enums;
global using ElevateOTT.ClientPortal.Extensions;
global using ElevateOTT.ClientPortal.Features.AppSettings.Commands.UpdateSettings;
global using ElevateOTT.ClientPortal.Features.AppSettings.Queries.GetSettings.GetFileStorageSettings;
global using ElevateOTT.ClientPortal.Features.AppSettings.Queries.GetSettings.GetIdentitySettings;
global using ElevateOTT.ClientPortal.Features.AppSettings.Queries.GetSettings.GetTokenSettings;
global using ElevateOTT.ClientPortal.Features.Dashboard.Queries.GetHeadlines;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.ConfirmEmail;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.ForgotPassword;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.Login;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.LoginWith2fa;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.LoginWithRecoveryCode;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.RefreshToken;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.Register;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.ResendEmailConfirmation;
global using ElevateOTT.ClientPortal.Features.Identity.Account.Commands.ResetPassword;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.ChangeEmail;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.ChangePassword;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.ConfirmEmailChange;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.DeletePersonalData;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.EnableAuthenticator;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.ResetAuthenticator;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.UpdateUserAvatar;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Commands.UpdateUserProfile;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.CheckUser2faState;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.DownloadPersonalData;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.GenerateRecoveryCodes;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.Get2faState;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.GetUser;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.GetUserAvatar;
global using ElevateOTT.ClientPortal.Features.Identity.Manage.Queries.LoadSharedKeyAndQrCodeUri;
global using ElevateOTT.ClientPortal.Features.Identity.Permissions.Queries.GetPermissions;
global using ElevateOTT.ClientPortal.Features.Identity.Roles.Commands.CreateRole;
global using ElevateOTT.ClientPortal.Features.Identity.Roles.Commands.UpdateRole;
global using ElevateOTT.ClientPortal.Features.Identity.Roles.Queries.GetRoleForEdit;
global using ElevateOTT.ClientPortal.Features.Identity.Roles.Queries.GetRoles;
global using ElevateOTT.ClientPortal.Features.Identity.Tenants.Commands.CreateTenantCommand;
global using ElevateOTT.ClientPortal.Features.Identity.Users.Commands.CreateUser;
global using ElevateOTT.ClientPortal.Features.Identity.Users.Commands.GrantOrRevokeUserPermissions;
global using ElevateOTT.ClientPortal.Features.Identity.Users.Commands.UpdateUser;
global using ElevateOTT.ClientPortal.Features.Identity.Users.Queries.GetUserForEdit;
global using ElevateOTT.ClientPortal.Features.Identity.Users.Queries.GetUserPermissions;
global using ElevateOTT.ClientPortal.Features.Identity.Users.Queries.GetUsers;
global using ElevateOTT.ClientPortal.Features.POC.Applicants.Commands.CreateApplicant;
global using ElevateOTT.ClientPortal.Features.POC.Applicants.Commands.UpdateApplicant;
global using ElevateOTT.ClientPortal.Features.POC.Applicants.Queries.ExportApplicants;
global using ElevateOTT.ClientPortal.Features.POC.Applicants.Queries.GetApplicantForEdit;
global using ElevateOTT.ClientPortal.Features.POC.Applicants.Queries.GetApplicants;
global using ElevateOTT.ClientPortal.Features.POC.Applicants.Queries.GetApplicantsReferences;
global using ElevateOTT.ClientPortal.Features.Reports.GetReportForEdit;
global using ElevateOTT.ClientPortal.Features.Reports.GetReports;
global using ElevateOTT.ClientPortal.Helpers;
global using ElevateOTT.ClientPortal.Interfaces;
global using ElevateOTT.ClientPortal.Interfaces.Consumers;
global using ElevateOTT.ClientPortal.Interfaces.Providers;
global using ElevateOTT.ClientPortal.Interfaces.Services;
global using ElevateOTT.ClientPortal.Models;
global using ElevateOTT.ClientPortal.Models.Reporting;
global using ElevateOTT.ClientPortal.Models.Settings;
global using ElevateOTT.ClientPortal.Models.Settings.IdentitySettings;
global using ElevateOTT.ClientPortal.Pages.Roles;
global using ElevateOTT.ClientPortal.Providers;
global using ElevateOTT.ClientPortal.Services;
global using ElevateOTT.ClientPortal.Shared;
global using ElevateOTT.FrontendResources;

global using Blazored.LocalStorage;

global using FluentValidation;

global using Microsoft.AspNetCore.Components;
global using Microsoft.AspNetCore.Components.Authorization;
global using Microsoft.AspNetCore.Components.Forms;
global using Microsoft.AspNetCore.Components.WebAssembly.Hosting;
global using Microsoft.AspNetCore.Http;
global using Microsoft.AspNetCore.SignalR.Client;
global using Microsoft.AspNetCore.WebUtilities;
global using Microsoft.Extensions.Configuration;
global using Microsoft.Extensions.DependencyInjection;
global using Microsoft.Extensions.Localization;
global using Microsoft.JSInterop;

global using MudBlazor;
global using MudBlazor.Services;

global using System;
global using System.Collections.Generic;
global using System.Globalization;
global using System.IO;
global using System.Linq;
global using System.Net;
global using System.Net.Http;
global using System.Net.Http.Headers;
global using System.Reflection;
global using System.Security.Claims;
global using System.Text;
global using System.Text.Json;
global using System.Text.RegularExpressions;
global using System.Threading;
global using System.Threading.Tasks;

global using Toolbelt.Blazor;
global using Toolbelt.Blazor.Extensions.DependencyInjection;

global using Severity = MudBlazor.Severity;
