<MudPaper Elevation="25" Class="pa-4">
    <MudChart ChartType="ChartType.Donut" LegendPosition="@LegendPosition" Width="300px" Height="300px" InputData="@Data" InputLabels="@Labels"></MudChart>
</MudPaper>

<MudPaper Class="pa-2 mt-2 d-flex justify-center">
    <MudSelect Label="@Resource.Legend_Position" Variant="Variant.Outlined" OffsetY="true" Dense="true" T="@Position" ValueChanged="OnSelectedValue">
        <MudSelectItem T="Position" Value="Position.Top">@Resource.Top</MudSelectItem>
        <MudSelectItem T="Position" Value="Position.Left">@Resource.Left</MudSelectItem>
        <MudSelectItem T="Position" Value="Position.Right">@Resource.Right</MudSelectItem>
        <MudSelectItem T="Position" Value="Position.Bottom">@Resource.Bottom</MudSelectItem>
        <MudSelectItem T="Position" Value="Position.Start">@Resource.Start</MudSelectItem>
        <MudSelectItem T="Position" Value="Position.End">@Resource.End</MudSelectItem>
    </MudSelect>
</MudPaper>

@code {
    public double[] Data = { 25, 77, 28, 5 };
    public string[] Labels = { Resource.Oil, Resource.Coal, Resource.Gas, Resource.Biomass };

    public Position LegendPosition { get; set; } = Position.Bottom;

    private void OnSelectedValue(Position value)
    {
        switch (value)
        {
            case Position.Top:
                LegendPosition = Position.Top;
                break;
            case Position.Left:
                LegendPosition = Position.Left;
                break;
            case Position.Right:
                LegendPosition = Position.Right;
                break;
            case Position.Bottom:
                LegendPosition = Position.Bottom;
                break;
            case Position.Start:
                LegendPosition = Position.Start;
                break;
            case Position.End:
                LegendPosition = Position.End;
                break;
        }
    }
}